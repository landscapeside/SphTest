plugins {
  id 'com.android.application'
  id 'kotlin-android'
  id 'kotlin-android-extensions'
  id 'kotlin-kapt'
}

android {
  compileSdkVersion rootProject.ext.compileSdkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion

  defaultConfig {
    applicationId "com.landside.sphtest"
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    versionCode rootProject.ext.versionMajor * 100 +
        rootProject.ext.versionMinor *
        10 +
        rootProject.ext.versionBuild
    versionName "${rootProject.ext.versionMajor}.${rootProject.ext.versionMinor}.${rootProject.ext.versionBuild}"

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    multiDexEnabled true
    javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true } }
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  kotlinOptions {
    jvmTarget = '1.8'
  }
}

dependencies {

  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  implementation 'androidx.core:core-ktx:1.3.2'
  api rootProject.ext.androidxSupport
  implementation rootProject.ext.recyclerView
  implementation rootProject.ext.cardView
  api rootProject.ext.design
  api rootProject.ext.constraint
  implementation rootProject.ext.multidex
  testImplementation 'junit:junit:4.+'
  androidTestImplementation 'androidx.test.ext:junit:1.1.2'
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

  implementation rootProject.ext.landSupport
  implementation(rootProject.ext.shadowState) {
    exclude group: 'org.reactivestreams', module: 'reactive-streams'
  }
  api rootProject.ext.liveDataToRxJava
  kapt rootProject.ext.shadowStateCompiler
  implementation( rootProject.ext.sliceRouter )
  kapt rootProject.ext.sliceRouterCompiler

  debugImplementation rootProject.ext.pandoraDebug
  releaseImplementation rootProject.ext.pandoraRelease

  //DI
  implementation rootProject.ext.dagger
  kapt rootProject.ext.daggerCompiler
  implementation rootProject.ext.daggerAndroid
  implementation rootProject.ext.daggerAndroidSupport
  kapt rootProject.ext.daggerAndroidCompiler

  api(rootProject.ext.glide) {
    exclude group: "com.android.support"
  }
  kapt rootProject.ext.glideCompiler

  implementation rootProject.ext.rxJava
  implementation rootProject.ext.rxAndroid
  implementation rootProject.ext.okHttpLoggingInterceptor
  implementation rootProject.ext.retrofit
  implementation rootProject.ext.retrofitAdapterRxJava
  implementation rootProject.ext.retrofitConverterGson
  implementation rootProject.ext.gson
  implementation rootProject.ext.timber

  //autodispose
  implementation rootProject.ext.autodispose
  implementation rootProject.ext.autodispose_ktx
  implementation rootProject.ext.autodispose_android_ktx
  implementation rootProject.ext.autodispose_archs_ktx

  implementation(rootProject.ext.rehost) {
    exclude group: 'com.github.orhanobut', module: 'logger'
  }
}